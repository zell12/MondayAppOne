// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Zell.UiPathAutomation.Orchestrator.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class SpecificEntityMonitoringFilters
    {
        /// <summary>
        /// Initializes a new instance of the SpecificEntityMonitoringFilters
        /// class.
        /// </summary>
        public SpecificEntityMonitoringFilters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SpecificEntityMonitoringFilters
        /// class.
        /// </summary>
        public SpecificEntityMonitoringFilters(long? entityId = default(long?), bool? includeSubfolders = default(bool?), int? tenantId = default(int?), IList<long?> organizationUnitIds = default(IList<long?>), int? timeFrameMinutes = default(int?), IList<long?> entityIds = default(IList<long?>))
        {
            EntityId = entityId;
            IncludeSubfolders = includeSubfolders;
            TenantId = tenantId;
            OrganizationUnitIds = organizationUnitIds;
            TimeFrameMinutes = timeFrameMinutes;
            EntityIds = entityIds;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityId")]
        public long? EntityId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "includeSubfolders")]
        public bool? IncludeSubfolders { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tenantId")]
        public int? TenantId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "organizationUnitIds")]
        public IList<long?> OrganizationUnitIds { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timeFrameMinutes")]
        public int? TimeFrameMinutes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityIds")]
        public IList<long?> EntityIds { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (EntityId != null)
            {
                if (EntityId < 1)
                {
                    throw new ValidationException(ValidationRules.InclusiveMinimum, "EntityId", 1);
                }
            }
            if (TenantId != null)
            {
                if (TenantId > 2147483647)
                {
                    throw new ValidationException(ValidationRules.InclusiveMaximum, "TenantId", 2147483647);
                }
                if (TenantId < 1)
                {
                    throw new ValidationException(ValidationRules.InclusiveMinimum, "TenantId", 1);
                }
            }
            if (TimeFrameMinutes != null)
            {
                if (TimeFrameMinutes > 1440)
                {
                    throw new ValidationException(ValidationRules.InclusiveMaximum, "TimeFrameMinutes", 1440);
                }
                if (TimeFrameMinutes < 1)
                {
                    throw new ValidationException(ValidationRules.InclusiveMinimum, "TimeFrameMinutes", 1);
                }
            }
        }
    }
}
