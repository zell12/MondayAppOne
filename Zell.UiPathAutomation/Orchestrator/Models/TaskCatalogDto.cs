// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Zell.UiPathAutomation.Orchestrator.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Task Catalog entity for external access
    /// </summary>
    public partial class TaskCatalogDto
    {
        /// <summary>
        /// Initializes a new instance of the TaskCatalogDto class.
        /// </summary>
        public TaskCatalogDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TaskCatalogDto class.
        /// </summary>
        /// <param name="name">Name of the Task Catalog.</param>
        /// <param name="description">Description of this task catalog.</param>
        /// <param name="lastModificationTime">Last Modification time of task
        /// catalog</param>
        public TaskCatalogDto(string name = default(string), string description = default(string), System.DateTime? lastModificationTime = default(System.DateTime?), long? id = default(long?))
        {
            Name = name;
            Description = description;
            LastModificationTime = lastModificationTime;
            Id = id;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the Task Catalog.
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets description of this task catalog.
        /// </summary>
        [JsonProperty(PropertyName = "Description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets last Modification time of task catalog
        /// </summary>
        [JsonProperty(PropertyName = "LastModificationTime")]
        public System.DateTime? LastModificationTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public long? Id { get; set; }

    }
}
