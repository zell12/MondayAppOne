// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Zell.UiPathAutomation.Orchestrator.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class TestCaseAssertionDto
    {
        /// <summary>
        /// Initializes a new instance of the TestCaseAssertionDto class.
        /// </summary>
        public TestCaseAssertionDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TestCaseAssertionDto class.
        /// </summary>
        public TestCaseAssertionDto(string message = default(string), string payload = default(string), bool? succeeded = default(bool?), long? testCaseExecutionId = default(long?), bool? hasScreenshot = default(bool?), System.DateTime? creationTime = default(System.DateTime?), long? id = default(long?))
        {
            Message = message;
            Payload = payload;
            Succeeded = succeeded;
            TestCaseExecutionId = testCaseExecutionId;
            HasScreenshot = hasScreenshot;
            CreationTime = creationTime;
            Id = id;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Message")]
        public string Message { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Payload")]
        public string Payload { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Succeeded")]
        public bool? Succeeded { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TestCaseExecutionId")]
        public long? TestCaseExecutionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HasScreenshot")]
        public bool? HasScreenshot { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreationTime")]
        public System.DateTime? CreationTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public long? Id { get; set; }

    }
}
