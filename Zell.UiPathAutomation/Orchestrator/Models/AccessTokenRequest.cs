// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Zell.UiPathAutomation.Orchestrator.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class AccessTokenRequest
    {
        /// <summary>
        /// Initializes a new instance of the AccessTokenRequest class.
        /// </summary>
        public AccessTokenRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AccessTokenRequest class.
        /// </summary>
        /// <param name="grantType">Possible values include: 'None',
        /// 'Client_Credentials', 'Orchestrator_Elastic'</param>
        public AccessTokenRequest(AccessTokenRequestGrantType? grantType = default(AccessTokenRequestGrantType?), string clientId = default(string), string clientSecret = default(string), string scope = default(string))
        {
            GrantType = grantType;
            ClientId = clientId;
            ClientSecret = clientSecret;
            Scope = scope;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'None', 'Client_Credentials',
        /// 'Orchestrator_Elastic'
        /// </summary>
        [JsonProperty(PropertyName = "grant_type")]
        public AccessTokenRequestGrantType? GrantType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "client_id")]
        public string ClientId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "client_secret")]
        public string ClientSecret { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "scope")]
        public string Scope { get; set; }

    }
}
